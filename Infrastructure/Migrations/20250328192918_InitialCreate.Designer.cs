// <auto-generated />
using System;
using Infrastructure.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infrastructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250328192918_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Domain.Entities.Book", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Author")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("BorrowedQuantity")
                        .HasColumnType("int");

                    b.Property<string>("Category")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Publisher")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Year")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Books");
                });

            modelBuilder.Entity("Domain.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActived")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("832e6ef5-716e-47a1-ab62-5cfc2f0527ca"),
                            Email = "admin@example.com",
                            IsActived = true,
                            Name = "Admin",
                            Password = "AQAAAAIAAYagAAAAENe8WV24ZVRQJNCj1kwCpQna6IuGH2HuGnKg9TxYJdz4dBWa5JMlc5wDO1YYDxmFWQ==",
                            Role = "Admin"
                        },
                        new
                        {
                            Id = new Guid("4caebd74-f83d-47ed-aee1-234a5622701b"),
                            Email = "officer@example.com",
                            IsActived = true,
                            Name = "Officer",
                            Password = "AQAAAAIAAYagAAAAEPbCIr/K6DtlrNYHAEK/LuUraRpKLcHTmAFB08wT8UR178Huzq7zqt/ar9ufyRFd9Q==",
                            Role = "Officer"
                        },
                        new
                        {
                            Id = new Guid("e4fda5d9-3f83-4aa8-81d9-d57f1f4160ef"),
                            Email = "user@example.com",
                            IsActived = true,
                            Name = "User",
                            Password = "AQAAAAIAAYagAAAAEG1MstTnLHLZbEGZcD5q3FdakMLxdEr9Lq+brChh5N49/VmaiMfbWrdsKVHMwQAHJw==",
                            Role = "User"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
